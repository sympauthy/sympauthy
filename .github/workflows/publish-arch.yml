name: Build & Push SympAuthy docker image to GitHub Container Registry

env:
  JAVA_VERSION: 21

on:
  workflow_call:
    inputs:
      ref:
        description: Git reference of the commit to build.
        type: string
        required: true
      image:
        description: Name of the produced docker image (including registry).
        type: string
        required: true
      tag:
        description: Tag of the produced docker image.
        type: string
        required: true
      arch:
        description: Architecture to build the docker image for.
        type: string
        required: true

jobs:
  publish:
    name: Build & Publish native image for ${{ inputs.arch }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: meta
        name: Generate Docker metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.image }}
          tags: type=raw,value=${{ inputs.tag }}

      - name: Create sympauthy-flow directory into resources
        run: mkdir -p server/src/main/resources/sympauthy-flow

      - name: Install sympauthy-flow into resources
        uses: actions/download-artifact@v4
        with:
          name: sympauthy-flow-dist
          path: server/src/main/resources/sympauthy-flow

      - id: build
        name: Build & Push docker image for ${{ inputs.arch }}
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: ./.github/docker/Dockerfile
          platforms: linux/${{ inputs.arch }}
          tags: ${{ inputs.image }}:${{ inputs.tag }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            ARCH=${{ inputs.arch }}
            JAVA_VERSION=${{ env.JAVA_VERSION }}
